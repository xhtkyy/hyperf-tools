<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: health.proto

namespace Xhtkyy\HyperfTools\Grpc\Health;

/**
 * Protobuf type <code>grpc.health.v1.Health</code>
 */
interface HealthInterface
{
    /**
     * If the requested service is unknown, the call will fail with status
     * NOT_FOUND.
     *
     * Method <code>check</code>
     *
     * @param \Xhtkyy\HyperfTools\Grpc\Health\HealthCheckRequest $request
     * @return \Xhtkyy\HyperfTools\Grpc\Health\HealthCheckResponse
     */
    public function check(\Xhtkyy\HyperfTools\Grpc\Health\HealthCheckRequest $request);

    /**
     * Performs a watch for the serving status of the requested service.
     * The server will immediately send back a message indicating the current
     * serving status.  It will then subsequently send a new message whenever
     * the service's serving status changes.
     *
     * If the requested service is unknown when the call is received, the
     * server will send a message setting the serving status to
     * SERVICE_UNKNOWN but will *not* terminate the call.  If at some
     * future point, the serving status of the service becomes known, the
     * server will send a new message with the service's serving status.
     *
     * If the call terminates with status UNIMPLEMENTED, then clients
     * should assume this method is not supported and should not retry the
     * call.  If the call terminates with any other status (including OK),
     * clients should retry the call with appropriate exponential backoff.
     *
     * Method <code>watch</code>
     *
     * @param \Xhtkyy\HyperfTools\Grpc\Health\HealthCheckRequest $request
     * @return \Xhtkyy\HyperfTools\Grpc\Health\HealthCheckResponse
     */
    public function watch(\Xhtkyy\HyperfTools\Grpc\Health\HealthCheckRequest $request);

}

